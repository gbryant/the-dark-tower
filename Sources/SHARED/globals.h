Copyright 2016 Gregory BryantLicensed under the Apache License, Version 2.0 (the "License");you may not use this file except in compliance with the License.You may obtain a copy of the License at    http://www.apache.org/licenses/LICENSE-2.0Unless required by applicable law or agreed to in writing, softwaredistributed under the License is distributed on an "AS IS" BASIS,WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.See the License for the specific language governing permissions andlimitations under the License./***********************************************************************/Boolean						gAltAsmInstErrMode;Boolean						gAsmInstError;long						gSourceEditorWindows;Boolean						gCodeBrowserListing;char 						*buffer;long						bm;AppControlList				gAppControls;ControlRef					*gMainControlFocus;ControlRef					*gSIINControlFocus;char						gMainCurrFocus;char						gSIINCurrFocus;#ifdef __POWERPC__AEEventHandlerUPP			gAEHandler;NavEventUPP					gSaveBoxEventProc;long						gAsmDBSize;WindowRef					gAppWindow;WindowRef					gSingleInstructionWindow;IBNibRef        			gSaveChangesNibRef;Boolean						gEnableEditRelocation;Boolean						gEnableEditSource;short						gCurrentTab;Boolean						gNeedsRectErased;long						gRelocationEditorItemEnum;LongChain					*gRelocationEditorItems;LongChain					*gRelocationEditorSelected;Boolean						gRelocationRemovingSelection;WindowRef 					gRelocEditorWindow;long						gSourceEditorItemEnum;LongChain					*gSourceEditorItems;LongChain					*gSourceEditorSelected;Boolean						gSourceRemovingSelection;Boolean						gJustAddedReloc;Boolean						gJustAddedInst;EventHandlerUPP				gTempMouseDownHandlerUPP;EventHandlerUPP				gKeyDownHandlerUPP;EventHandlerUPP				gKeyModifierHandlerUPP;EventHandlerUPP				gSIIN_KeyModifierHandlerUPP;Boolean						gRelocCellSelected;Boolean						gSourceCellSelected;Boolean						gSkipThisRun;ControlRef					gSelectedRelocCell;ControlRef					gSelectedSourceCell;ControlEditTextValidationUPP gEditTextValidaterUPP;ControlKeyFilterUPP			gEditTextKeyFilterUPP;Boolean						gMustClearRelocMessage;Boolean						gMustClearSourceMessage;MenuRef						gRelocInstructionMenu;MenuRef						gSourceInstructionMenu;LongChain					*gSelectedRelocItem;LongChain					*gSelectedSourceItem;#include					"theData.h"PicHandle					gEditTextPic;PicHandle					gPopupMenuPic;ControlRef					gRelocEditCellControl;ControlRef					gSourceEditCellControl;EventHandlerUPP				gWinCloseHandlerUPP;Boolean						gQuitting;#endif#ifdef __INTEL__HANDLE 			heap;const char 		g_szClassName[] = "myWindowClass";HWND 			gHwnd;HWND					gAppProgressBar;HWND					gAppTopText;HWND					gAppBottomText;#endifKey							gASSMProjectKey;FileReference				gDISSFileRef;FileReference				gEXPLFileRef;Boolean 					tbv,txt;long 						g_powi,g_powrv;Str255 						gTempTxt,gTempTxt2,gTempTxt3;long						gSrcPosAccum;int							gData;Str255						gtempstr;GlobalSettings				gGlobalSettings;Boolean						gAELaunched;long						gTotalBranchCount;PointerRecord				gPointerRecord;PointerRecord				*gCurrPointerRecord;Boolean						gAborted;long						gLongTemp;unsigned char				gA,gB,gC,gD;unsigned char						gFileReadErrorText[]="\pAn error occured while reading from your disk";unsigned char						gNoCodeSection[]="\pCould not find the kPefCodeSection";unsigned char						gNoLoaderSection[]="\pCould not find the kPEFLoaderSection";unsigned char						gMultipleRelocations[]="\pI only handle one relocation section at the moment";unsigned char						gNoDataSection[]="\pCould not find either: kPEFUnpackedDataSection or kPEFPackedDataSection";unsigned char						gBadDataOpcode[]="\pProblem during data section expansion";unsigned char						gNoResourceSpecified[]="\pYour key file does not contain a resource entry";unsigned char						gGenericError[]="\pA generic error has occured";unsigned char						gNoRelocationsSpecified[]="\pYour key file does not contain a relocation entry";DataVariable 				*gDataOffsets;LabelEntry					*gLabelOffsets;long						gLabelListSize;Boolean						gOnX;